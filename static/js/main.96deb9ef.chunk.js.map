{"version":3,"sources":["serviceWorker.ts","utils.ts","components/TimerConfigForm.tsx","components/SimpleButtonDialog.tsx","assets/setting.svg","styles/theme.ts","components/TimerCircle.tsx","components/TimerText.tsx","components/CurrentMaxim.tsx","components/Timer.tsx","styles/global-style.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","isValidDate","value","Date","isNaN","getTime","StyledDatePicker","styled","default_date","className","onChange","useState","selected_date","setSelectedDate","setDate","date","utils","DateFnsUtils","locale","jaLocale","disableToolbar","variant","format","label","KeyboardButtonProps","ampm","StyledTimerConfigForm","default_value","current_value","setCurrentValue","changeCurrentValue","changes","changed_value","Object","assign","Typography","from","d","TextField","aria-describedby","defaultValue","event_name","e","target","to","StyledDialogContent","div","SimpleButtonDialog","title","button_content","default_open","children","open","setOpen","Button","onClick","Dialog","onClose","DialogTitle","DialogActions","_extends","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","_ref3","_ref","svgRef","props","viewBox","width","height","ref","ForwardRef","forwardRef","primary_color","blue","secondary_color","blueGrey","mui_theme","createMuiTheme","palette","type","primary","main","secondary","StyledTimerCircle","current","current_time","from_time","to_time","progress","responsive","progressColor","bgColor","animate","StyledTimerText","remaining_time","remaining_days","hour","remaining_date","Math","floor","formatToTimeZone","timeZone","text","maxims","binarysearch","require","getMaxim","base_sec_par_maxim","sec_par_char","maxims_with_readtime","map","x","readtime_sec","maxim","maxims_with_start_time","start_time_sec","forEach","push","all_readtime_sec","reduce","s","index","closest","elem","pivot","maxim_with_cumulative_readtime","generateGetMaxim","StyledCurrentMaxim","Hline","width_weight","auther","StyledSimpleButtonDialog","StyledTimer","current_date","setCurrentDate","useEffect","setInterval","use_timer_config_params","useQueryParams","withDefault","StringParam","DateTimeParam","timer_config","setTimerConfig","config","global_style","css","ReactDOM","render","StrictMode","ThemeProvider","theme","styles","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96deb9ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const isValidDate = (value: any): value is Date =>\n  value instanceof Date && !isNaN(value.getTime());\n","import React, { FC, useState } from 'react';\nimport { TimerConfig } from '../types';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport jaLocale from 'date-fns/locale/ja';\nimport styled from '@emotion/styled';\nimport { isValidDate } from '../utils';\n\nconst DateTimePicker: FC<{\n  default_date: Date | null;\n  className?: string;\n  onChange: (date: Date) => void;\n}> = ({ default_date, className, onChange }) => {\n  const [selected_date, setSelectedDate] = useState<Date | null>(default_date);\n  const setDate = (date: Date): void => {\n    setSelectedDate(date);\n    onChange(date);\n  };\n\n  return (\n    <div className={className}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={jaLocale}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"yyyy/MM/dd\"\n          label=\"date\"\n          value={selected_date}\n          onChange={(value) => (isValidDate(value) ? setDate(value) : null)}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <KeyboardTimePicker\n          variant=\"inline\"\n          label=\"time\"\n          ampm={false}\n          value={selected_date}\n          onChange={(value) => (isValidDate(value) ? setDate(value) : null)}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n};\n\nconst StyledDatePicker = styled(DateTimePicker)`\n  > div + div {\n    margin: 0 0.5em;\n  }\n\n  > div:nth-of-type(1) {\n    width: 9em;\n  }\n  > div:nth-of-type(2) {\n    width: 6em;\n  }\n`;\n\nexport const TimerConfigForm: FC<{\n  default_value: TimerConfig;\n  className?: string;\n  onChange: (changes: Partial<TimerConfig>) => void;\n}> = ({ default_value, className, onChange }) => {\n  const [current_value, setCurrentValue] = useState<TimerConfig>(default_value);\n  const changeCurrentValue = (changes: Partial<TimerConfig>): void => {\n    const changed_value = Object.assign(current_value, changes);\n    setCurrentValue(changed_value);\n    onChange(changed_value);\n  };\n\n  return (\n    <div className={className}>\n      <Typography className=\"label\" variant=\"subtitle1\">\n        いつから？（作業開始）\n      </Typography>\n      <StyledDatePicker\n        default_date={default_value.from ? default_value.from : null}\n        onChange={(d) => changeCurrentValue({ from: d })}\n      />\n\n      <Typography className=\"label\" variant=\"subtitle1\">\n        何を？\n      </Typography>\n      <TextField\n        label=\"イベント名\"\n        aria-describedby=\"event-name\"\n        defaultValue={default_value.event_name}\n        onChange={(e) => changeCurrentValue({ event_name: e.target.value })}\n      />\n\n      <Typography className=\"label\" variant=\"subtitle1\">\n        いつまで？\n      </Typography>\n      <StyledDatePicker\n        default_date={default_value.to ? default_value.to : null}\n        onChange={(d) => changeCurrentValue({ to: d })}\n      />\n    </div>\n  );\n};\n\nexport const StyledTimerConfigForm = styled(TimerConfigForm)`\n  > .label {\n    margin-bottom: 0.5em;\n    &:not(:nth-of-type(1)) {\n      margin-top: 2em;\n    }\n  }\n`;\n\nexport default StyledTimerConfigForm;\n","import React, { useState, FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport styled from '@emotion/styled';\n\nexport const SimpleButtonDialog: FC<{\n  title: string;\n  button_content: JSX.Element;\n  default_open?: boolean;\n  className?: string;\n  children: JSX.Element;\n}> = ({ title, button_content, default_open, className, children }) => {\n  const [open, setOpen] = useState<boolean>(default_open || false);\n\n  return (\n    <div className={className}>\n      <Button onClick={() => setOpen(true)}>{button_content}</Button>\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <DialogTitle>{title}</DialogTitle>\n        <StyledDialogContent>{children}</StyledDialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpen(false)}>OK</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst StyledDialogContent = styled.div`\n  padding: 0 24px;\n`;\n\nexport default SimpleButtonDialog;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#2196f3\",\n  d: \"M504.1,256C504.1,119,393,7.9,256,7.9C119,7.9,7.9,119,7.9,256C7.9,393,119,504.1,256,504.1C393,504.1,504.1,393,504.1,256z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#fff\",\n  d: \"M416.2,275.3v-38.6l-36.6-11.5c-3.1-12.4-8-24.1-14.5-34.8l17.8-34.1L355.6,129l-34.2,17.8c-10.6-6.4-22.2-11.2-34.6-14.3l-11.6-36.8h-38.7l-11.6,36.8c-12.3,3.1-24,7.9-34.6,14.3L156.4,129L129,156.4l17.8,34.1c-6.4,10.7-11.4,22.3-14.5,34.8l-36.6,11.5v38.6l36.4,11.5c3.1,12.5,8,24.3,14.5,35.1L129,355.6l27.3,27.3l33.7-17.6c10.8,6.5,22.7,11.5,35.3,14.6l11.4,36.2h38.7l11.4-36.2c12.6-3.1,24.4-8.1,35.3-14.6l33.7,17.6l27.3-27.3l-17.6-33.8c6.5-10.8,11.4-22.6,14.5-35.1L416.2,275.3z M256,340.8c-46.7,0-84.6-37.9-84.6-84.6c0-46.7,37.9-84.6,84.6-84.6c46.7,0,84.5,37.9,84.5,84.6C340.5,303,302.7,340.8,256,340.8z\"\n});\n\nvar SvgSetting = function SvgSetting(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    width: \"32px\",\n    height: \"32px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSetting, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/setting.40805541.svg\";\nexport { ForwardRef as ReactComponent };","import blue from '@material-ui/core/colors/blue';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport { createMuiTheme } from '@material-ui/core';\n\nexport const primary_color = blue;\nexport const secondary_color = blueGrey;\n\nexport const mui_theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: primary_color[500],\n    },\n    secondary: {\n      main: secondary_color[500],\n    },\n  },\n});\n","import React, { FC } from 'react';\nimport Circle from 'react-circle';\nimport styled from '@emotion/styled';\nimport { secondary_color } from '../styles/theme';\n\nexport const TimerCircle: FC<{\n  current: Date;\n  from: Date;\n  to: Date;\n  className?: string;\n}> = ({ current, from, to, className }) => {\n  const current_time = current.getTime();\n  const from_time = from.getTime();\n  const to_time = to.getTime();\n\n  const progress = (() => {\n    if (from_time >= to_time) return 0;\n    if (current_time < from_time) return 0;\n    if (to_time < current_time) return 100;\n\n    return ((current_time - from_time) / (to_time - from_time)) * 100;\n  })();\n\n  return (\n    <div className={className}>\n      <Circle\n        progress={progress}\n        responsive\n        progressColor={secondary_color[700]}\n        bgColor={secondary_color[800]}\n        animate={false}\n      />\n    </div>\n  );\n};\n\nexport const StyledTimerCircle = styled(TimerCircle)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: -1;\n\n  svg {\n    width: calc(min(100%, 100vh) - 30px);\n    height: calc(min(100%, 100vh) - 30px);\n\n    text {\n      display: none;\n    }\n  }\n`;\n\nexport default StyledTimerCircle;\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { formatToTimeZone } from 'date-fns-timezone';\nimport { mui_theme } from '../styles/theme';\n\nexport const TimerText: FC<{\n  event_name: string;\n  current: Date;\n  to: Date;\n  className?: string;\n}> = ({ event_name, current, to, className }) => {\n  const current_time = current.getTime();\n  const to_time = to.getTime();\n  const remaining_time = to_time - current_time;\n\n  const hour = 1000 * 60 * 60;\n  const day = hour * 24;\n  const remaining_days = remaining_time / day;\n  const remaining_date = new Date(remaining_time % day);\n\n  return (\n    <div className={className}>\n      {current_time <= to_time ? (\n        <>\n          <span className=\"middle\">{event_name}</span>\n          まで\n          <span className=\"big\">{Math.floor(remaining_days)}日</span>\n          <br />\n          {formatToTimeZone(remaining_date, 'H時間mm分ss秒SSS', {\n            timeZone: 'Etc/UTC',\n          })}\n        </>\n      ) : (\n        <>\n          <span className=\"middle\">{event_name}</span>は終了しました\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const StyledTimerText = styled(TimerText)`\n  padding: 1em;\n  color: ${mui_theme.palette.text.primary};\n  text-align: center;\n  font-size: calc(1rem + 1vw);\n\n  .big {\n    font-size: calc(2rem + 4vw);\n  }\n  .middle {\n    font-size: calc(1rem + 2vw);\n  }\n`;\n\nexport default StyledTimerText;\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { mui_theme } from '../styles/theme';\nimport { Maxim } from '../types';\nimport maxims_json from './maxims.json';\nconst maxims: Maxim[] = maxims_json;\nconst binarysearch = require('binarysearch');\n\nconst generateGetMaxim = ({\n  base_sec_par_maxim,\n  sec_par_char,\n}: {\n  base_sec_par_maxim: number;\n  sec_par_char: number;\n}): ((current: Date) => { maxim: Maxim; progress: number }) => {\n  const maxims_with_readtime: {\n    readtime_sec: number;\n    maxim: Maxim;\n  }[] = maxims.map((x) => ({\n    readtime_sec: x.text.length * sec_par_char + base_sec_par_maxim,\n    maxim: x,\n  }));\n\n  const maxims_with_start_time: (typeof maxims_with_readtime[0] & {\n    start_time_sec: number;\n  })[] = [];\n  let start_time_sec = 0;\n  maxims_with_readtime.forEach((x) => {\n    maxims_with_start_time.push({ ...x, start_time_sec });\n    start_time_sec += x.readtime_sec;\n  });\n\n  const all_readtime_sec = maxims_with_readtime.reduce(\n    (s, x) => s + x.readtime_sec,\n    0\n  );\n\n  return (current: Date): { maxim: Maxim; progress: number } => {\n    const current_time: number = current.getTime() % (all_readtime_sec * 1000);\n    const index = binarysearch.closest(\n      maxims_with_start_time,\n      current_time / 1000,\n      (elem: typeof maxims_with_start_time[0], pivot: number) =>\n        elem.start_time_sec - pivot\n    );\n\n    const maxim_with_cumulative_readtime = maxims_with_start_time[index];\n\n    const start_time_sec = maxim_with_cumulative_readtime.start_time_sec;\n    const readtime = maxim_with_cumulative_readtime.readtime_sec;\n    const progress = (current_time / 1000 - start_time_sec) / readtime;\n\n    return { maxim: maxim_with_cumulative_readtime.maxim, progress };\n  };\n};\nconst getMaxim = generateGetMaxim({\n  base_sec_par_maxim: 4.5,\n  sec_par_char: 0.15,\n});\n\nexport const CurrentMaxim: FC<{\n  current: Date;\n  className?: string;\n}> = ({ current, className }) => {\n  const { maxim, progress } = getMaxim(current);\n\n  return (\n    <div className={className}>\n      <span>{maxim.text}</span>\n      <Hline width_weight={1 - progress} />\n      <span>{maxim.auther}</span>\n    </div>\n  );\n};\n\nexport const StyledCurrentMaxim = styled(CurrentMaxim)`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  width: calc(min(400px, 90vw));\n  margin-top: 2em;\n  color: ${mui_theme.palette.text.primary};\n  font-family: serif;\n  font-style: italic;\n`;\n\nconst Hline = styled.div<{ width_weight: number }>`\n  width: calc(100% * ${({ width_weight }) => width_weight});\n  height: 1px;\n  margin: 1em 0;\n  background: ${mui_theme.palette.text.secondary};\n`;\n\nexport default StyledCurrentMaxim;\n","import React, { FC, useState, useEffect } from 'react';\nimport {\n  useQueryParams,\n  StringParam,\n  DateTimeParam,\n  withDefault,\n} from 'use-query-params';\n\nimport { TimerConfig } from '../types';\nimport { isValidDate } from '../utils';\n\nimport TimerConfigForm from './TimerConfigForm';\nimport SimpleButtonDialog from './SimpleButtonDialog';\nimport { ReactComponent as SettingIcon } from '../assets/setting.svg';\nimport TimerCircle from './TimerCircle';\n\nimport styled from '@emotion/styled';\nimport TimerText from './TimerText';\nimport CurrentMaxim from './CurrentMaxim';\n\nexport const Timer: FC<{ className?: string }> = ({ className }) => {\n  const [current_date, setCurrentDate] = useState<Date>(new Date());\n  useEffect(() => {\n    setInterval(() => setCurrentDate(new Date()), 137);\n  }, []);\n\n  const use_timer_config_params = useQueryParams({\n    event_name: withDefault(StringParam, ''),\n    from: DateTimeParam,\n    to: DateTimeParam,\n  });\n  const timer_config: TimerConfig = use_timer_config_params[0];\n  const setTimerConfig = use_timer_config_params[1];\n\n  return (\n    <div className={className}>\n      {isValidDate(timer_config.from) && isValidDate(timer_config.to) ? (\n        <TimerCircle\n          current={current_date}\n          from={timer_config.from}\n          to={timer_config.to}\n        />\n      ) : null}\n      {isValidDate(timer_config.to) ? (\n        <TimerText\n          event_name={timer_config.event_name}\n          current={current_date}\n          to={timer_config.to}\n        />\n      ) : null}\n      <CurrentMaxim current={current_date} />\n      <StyledSimpleButtonDialog\n        title=\"設定\"\n        button_content={<SettingIcon />}\n        default_open={\n          timer_config.event_name === '' || !isValidDate(timer_config.to)\n        }\n      >\n        <TimerConfigForm\n          default_value={timer_config}\n          onChange={(config) => setTimerConfig(config, 'replace')}\n        />\n      </StyledSimpleButtonDialog>\n    </div>\n  );\n};\n\nconst StyledSimpleButtonDialog = styled(SimpleButtonDialog)`\n  button {\n    position: fixed;\n    top: 10px;\n    right: 10px;\n  }\n`;\n\nexport const StyledTimer = styled(Timer)`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default StyledTimer;\n","import { css } from '@emotion/core';\nimport { secondary_color } from './theme';\n\nexport const global_style = css`\n  body {\n    background: ${secondary_color[900]};\n    font-family: sans-serif;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { QueryParamProvider } from 'use-query-params';\nimport Timer from './components/Timer';\nimport { ThemeProvider } from '@material-ui/core';\nimport { mui_theme } from './styles/theme';\nimport { Global } from '@emotion/core';\nimport { global_style } from './styles/global-style';\nimport 'sanitize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={mui_theme}>\n      <QueryParamProvider>\n        <Global styles={global_style} />\n        <Timer />\n      </QueryParamProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}